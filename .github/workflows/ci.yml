name: ci
on: push
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code ðŸ›Ž
        uses: actions/checkout@v2
      - name: Install dependencies ðŸ“¦
        uses: cypress-io/github-action@v2
        with:
          # just perform install
          runTests: false

      - name: Run unit tests ðŸ§ª
        run: |
          npx cypress run --config testFiles="**/unit.js"

      - name: Run e2e tests ðŸ§ª
        run: |
          npx cypress-expect \
            --min-passing 5 --pending 0

      - name: Run e2e skip tests without grep ðŸ§ª
        run: |
          npx cypress-expect \
            --passing 1 --pending 2 \
            --spec cypress/integration/skip-spec.js \
            --config testFiles="skip-spec.js"

      # all tests are pending
      # because the grep tag is only used in "it.skip" tests
      - name: Run e2e skip tests with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/skip-spec.js \
            --config testFiles="skip-spec.js" \
            --env grep=pending \
            --expect expects/pending.json

      # tests do not break the custom test config object as argument
      - name: Run e2e tests with config object with grep ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/config-spec.js \
            --config testFiles="config-spec.js" \
            --env grep=@config \
            --expect expects/config-spec.json

      # there should be 1 test with "hello" substring
      # and 3 other tests that will be pending
      - name: Run tests with "hello" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=hello \
            --expect ./expects/hello.json

      - name: Run tests with "@tag1" ðŸ§ª
        run: |
          npx cypress-expect run \
            --env grep=@tag1 \
            --expect ./expects/tag1.json

      - name: Run tests with "@tag2" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=@tag2 \
            --expect ./expects/tag2.json

      - name: Run tests with "does-not-exist-tag" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=does-not-exist-tag \
            --expect ./expects/all-pending.json

      - name: Run tests with "@tag1 AND @tag2" ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=@tag1+@tag2 \
            --expect ./expects/tag1-and-tag2.json

      - name: Run tests without @tag1 ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep=-@tag1 \
            --expect ./expects/invert-tag1.json

      - name: Run tests with hello OR @tag1 ðŸ§ª
        run: |
          npx cypress-expect \
            --env grep='hello @tag1' \
            --expect ./expects/hello-or-tag1.json

      # you can pass test tags in the config object
      - name: Run e2e tests with tags in the config ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/config-tags-spec.js \
            --config testFiles="config-tags-spec.js" \
            --env grep=config \
            --expect expects/config-tags-spec.json

      # skip tests by using describe tags
      - name: Run e2e tests with tags on the describe ðŸ§ª
        run: |
          npx cypress-expect \
            --spec cypress/integration/describe-tags-spec.js \
            --config testFiles="describe-tags-spec.js" \
            --env grep=-@smoke \
            --expect expects/describe-tags-spec.json

      - name: Semantic Release ðŸš€
        uses: cycjimmy/semantic-release-action@v2
        with:
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
